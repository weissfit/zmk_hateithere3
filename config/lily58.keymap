/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_de.h"
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/lily58.h"

#define HOST_OS 1

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp DE_N1  &kp DE_N2  &kp N3            &kp DE_N4        &kp DE_N5                                    &kp DE_N6  &kp DE_N7  &kp DE_N8     &kp DE_N9      &kp DE_N0  &kp F22
&kp TAB    &kp DE_Z   &kp DE_Y   &kp DE_U          &kp DE_A         &kp DE_Q                                     &kp DE_P   &kp DE_B   &kp DE_M      &kp DE_L       &kp DE_F   &kp DE_J
&kp LCTRL  &kp DE_C   &kp DE_S   &kp DE_I          &kp DE_E         &kp DE_O                                     &kp DE_D   &kp DE_T   &kp DE_N      &kp DE_R       &kp DE_H   &kp DE_SZ
&kp LSHFT  &kp DE_V   &kp DE_X   &kp DE_U_UMLAUT   &kp DE_A_UMLAUT  &kp DE_O_UMLAUT  &kp F23      &kp F24        &kp DE_W   &kp DE_G   &kp DE_COMMA  &kp DE_PERIOD  &kp DE_K   &kp RSHFT
                                 &kp C_PLAY_PAUSE  &kp LGUI         &mo 1            &kp SPACE    &kp BACKSPACE  &kp ENTER  &kp LALT   &none
            >;
        };

        s_char {
            bindings = <
&trans     &kp LG(DE_N6)     &kp LG(DE_N7)  &kp LG(DE_N8)    &kp LG(DE_N9)  &kp LG(DE_N0)                           &none      &none         &none             &none         &none              &none
&kp TAB    &kp LC(LS(DE_T))  &kp LC(W)      &kp LC(LS(TAB))  &kp LC(TAB)    &kp LC(DE_T)                            &kp PG_UP  &kp LC(LEFT)  &kp LC(NUMBER_1)  &kp LC(J)     &kp LC(RIGHT)      &kp HOME
&kp LCTRL  &mo 5             &mo 4          &mo 3            &mo 2          &none                                   &kp PG_DN  &kp LEFT      &kp UP            &kp DOWN      &kp RIGHT          &kp END
&kp LSHFT  &kp LEFT          &kp UP         &kp DOWN         &kp RIGHT      &kp LG(DE_Q)   &kp F23      &kp F24     &none      &kp DE_MINUS  &kp DE_SEMICOLON  &kp DE_COLON  &kp DE_UNDERSCORE  &kp ESC
                                            &kp C_PREV       &trans         &trans         &kp SPACE    &kp DELETE  &trans     &trans        &kp C_NEXT
            >;
        };

        stzch {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                      &trans       &trans              &trans                &trans         &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans                      &trans       &kp DE_EXCLAMATION  &kp DE_SINGLE_QUOTE   &kp DE_PLUS    &kp DE_EQUAL     &kp DE_GRAVE
&trans  &trans  &trans  &trans  &trans  &trans                      &trans       &kp DE_QUESTION     &kp DE_DOUBLE_QUOTES  &kp DE_HASH    &kp DE_ASTERISK  &kp DE_CARET
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &kp DE_EURO  &kp DE_AT           &kp DE_AMPERSAND      &kp DE_DOLLAR  &kp DE_PERCENT   &kp DE_DOLLAR
                        &trans  &trans  &trans  &trans    &kp BSPC  &kp ENTER    &trans              &trans
            >;
        };

        brackets {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                      &trans     &trans                   &trans                    &trans             &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans                      &trans     &kp DE_LEFT_BRACKET      &kp DE_RIGHT_BRACKET      &kp DE_LESS_THAN   &kp DE_GREATER_THAN  &trans
&trans  &trans  &trans  &trans  &trans  &trans                      &trans     &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_LEFT_BRACE  &kp DE_RIGHT_BRACE   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &kp DE_SLASH             &kp DE_BACKSLASH          &kp DE_PIPE        &kp DE_TILDE         &trans
                        &trans  &trans  &trans  &trans    &kp BSPC  &kp ENTER  &trans                   &trans
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                      &kp K_CALCULATOR  &kp DE_EQUAL  &none      &none      &none            &none
&trans  &trans  &trans  &trans  &trans  &trans                      &kp DE_PLUS       &kp DE_N7     &kp DE_N8  &kp DE_N9  &kp DE_ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans                      &kp DE_MINUS      &kp DE_N4     &kp DE_N5  &kp DE_N6  &kp DE_SLASH     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &kp DE_PERIOD     &kp DE_N1     &kp DE_N2  &kp DE_N3  &kp DE_N0        &kp DE_COMMA
                        &trans  &trans  &trans  &trans    &kp BSPC  &kp ENTER         &trans        &trans
            >;
        };

        fn {
            bindings = <
&trans  &mo 6   &trans  &trans        &trans        &trans                        &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE                    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans        &trans        &trans                        &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans        &trans        &trans      &trans    &trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans        &trans        &trans      &trans    &trans  &trans  &trans  &trans
            >;
        };

        bt {
            bindings = <
&none  &none  &none  &none  &none  &none                  &bt BT_CLR_ALL  &none  &none  &none  &none  &bt BT_SEL 0
&none  &none  &none  &none  &none  &none                  &none           &none  &none  &none  &none  &bt BT_SEL 1
&none  &none  &none  &none  &none  &none                  &none           &none  &none  &none  &none  &bt BT_SEL 2
&none  &none  &none  &none  &none  &none  &none    &none  &soft_off       &none  &none  &none  &none  &bt BT_SEL 3
                     &none  &none  &none  &none    &none  &none           &none  &none
            >;
        };
    };
};
